# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-03-29 22:52
from __future__ import unicode_literals

import cb_secrets.fields
from django.db import migrations, models
import django.db.models.deletion
import resourcehandlers.gcp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('resourcehandlers', '0011_resourcehandler_enable_terminal_feature'),
        ('libcloudhandler', '0006_remove_libcloudimage_old_template_name'),
        ('accounts', '0036_extend_server_list_args'),
        ('infrastructure', '0038_auto_20180625_2145'),
    ]

    operations = [
        migrations.CreateModel(
            name='GCPHandler',
            fields=[
                ('resourcehandler_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resourcehandlers.ResourceHandler')),
                ('web_client_json', cb_secrets.fields.EncryptedTextField(blank=True, null=True, verbose_name='OAuth Client ID JSON for Web Applications')),
            ],
            options={
                'verbose_name': 'Libcloud resource handler',
                'abstract': False,
            },
            bases=('resourcehandlers.resourcehandler',),
        ),
        migrations.CreateModel(
            name='GCPNetwork',
            fields=[
                ('resourcenetwork_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resourcehandlers.ResourceNetwork')),
                ('cidr_block', models.CharField(blank=True, max_length=30)),
                ('mode', models.CharField(choices=[('legacy', 'Legacy'), ('custom', 'Custom'), ('auto', 'Auto')], max_length=12)),
            ],
            options={
                'verbose_name': 'GCP Network',
                'abstract': False,
            },
            bases=('resourcehandlers.resourcenetwork',),
        ),
        migrations.CreateModel(
            name='GCPProject',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('project_number', models.CharField(max_length=20)),
                ('service_account_key', models.TextField()),
                ('imported', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(related_name='gcp_projects', to='accounts.Group')),
                ('handler', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gcp_projects', to='gcp.GCPHandler')),
            ],
        ),
        migrations.CreateModel(
            name='GCPServerInfo',
            fields=[
                ('libcloudserverinfo_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='libcloudhandler.LibcloudServerInfo')),
                ('gcp_project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='servers', to='gcp.GCPProject')),
            ],
            options={
                'abstract': False,
            },
            bases=('libcloudhandler.libcloudserverinfo',),
        ),
        migrations.CreateModel(
            name='GCPServerNetworkCard',
            fields=[
                ('servernetworkcard_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='infrastructure.ServerNetworkCard')),
                ('subnetwork_name', models.CharField(blank=True, max_length=1024)),
            ],
            options={
                'verbose_name': 'GCP NIC',
                'abstract': False,
            },
            bases=('infrastructure.servernetworkcard',),
        ),
        migrations.CreateModel(
            name='GCPSubnetwork',
            fields=[
                ('resourcenetwork_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='resourcehandlers.ResourceNetwork')),
                ('cidr_block', models.CharField(blank=True, max_length=30)),
                ('region', models.CharField(max_length=128)),
                ('parent_network', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subnetworks', to='gcp.GCPNetwork')),
            ],
            options={
                'verbose_name': 'GCP Subnetwork',
                'abstract': False,
            },
            bases=('resourcehandlers.resourcenetwork',),
        ),
        migrations.AddField(
            model_name='gcphandler',
            name='networks',
            field=models.ManyToManyField(blank=True, to='resourcehandlers.ResourceNetwork'),
        ),
        migrations.AddField(
            model_name='gcphandler',
            name='subnetworks',
            field=models.ManyToManyField(blank=True, related_name='subnetwork_gcp_handlers', to='resourcehandlers.ResourceNetwork'),
        ),
    ]
