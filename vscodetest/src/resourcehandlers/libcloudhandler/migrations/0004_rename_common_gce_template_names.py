# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-03-02 17:51
"""
If this CloudBolt has imported any of the GCE common images, change the
old template name (a partial match of the image name) to the new name (the
GCE OS family for that image).

The new names allow us to call get_image_from_family on the name, which is a
much faster way of looking up the template than Libcloud's default of fetching
all templates and looking for a partial match.
"""

from __future__ import unicode_literals

from django.db import migrations


template_name_map = {
    "ubuntu-14-04": "ubuntu-1404-lts",
    "ubuntu-16-04": "ubuntu-1604-lts",
    "windows-server-2008-r2": "windows-2008-r2",
    "windows-server-2012-r2": "windows-2012-r2",
    "windows-server-2016": "windows-2016",
    "sql-2012-standard-windows-2012-r2": "sql-std-2012-win-2012-r2",
    "sql-2012-web-windows-2012-r2": "sql-web-2012-win-2012-r2",
    "sql-2014-standard-windows-2012-r2": "sql-std-2014-win-2012-r2",
    "sql-2014-web-windows-2012-r2": "sql-web-2014-win-2012-r2",
    "sql-2016-standard-windows-2012-r2": "sql-std-2014-win-2012-r2",
    "sql-2016-web-windows-2012-r2": "sql-std-2014-win-2012-r2",
    "sql-2016-standard-windows-2016": "sql-std-2016-win-2016",
    "sql-2016-web-windows-2016": "sql-web-2016-win-2016",
}


def rename_common_gce_template_names(apps, schema_editor):
    LibcloudImage = apps.get_model('libcloudhandler', 'libcloudimage')
    images = LibcloudImage.objects.filter(
        template_name__in=list(template_name_map.keys()))
    for image in images:
        image.template_name = template_name_map[image.template_name]
        image.save()


class Migration(migrations.Migration):

    dependencies = [
        ('libcloudhandler', '0003_libcloudserverinfo_snapshots'),
    ]

    operations = [
        migrations.RunPython(rename_common_gce_template_names,
                             migrations.RunPython.noop)
    ]
