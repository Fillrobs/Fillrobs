# Generated by Django 2.2.12 on 2020-08-14 16:04

from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations


def move_libcloudserverinfo_to_openstackserverinfo(apps, schema_editor):
    """
    We added a more-specific OpenStackServerInfo model to store additional concepts
    specific to OpenStack (e.g., Availability Zone) that aren't part of the LibcloudServerInfo.
    However, existing OpenStack Servers will have a LibcloudServerInfo so we want to copy that
    data over to a new OpenStackServerInfo for such Servers, to avoid losing any info about them/
    having to wait until sync VMs was run to see it.
    """
    OpenStackHandler = apps.get_model('openstack', 'OpenStackHandler')
    LibcloudServerInfo = apps.get_model('libcloudhandler', 'LibcloudServerInfo')
    OpenStackServerInfo = apps.get_model('openstack', 'OpenStackServerInfo')
    for rh in OpenStackHandler.objects.all():
        for svr in rh.server_set.all():
            if OpenStackServerInfo.objects.filter(server=svr).first():
                # We already have what we need, nothing to do
                continue
            else:
                old_svr_info = LibcloudServerInfo.objects.filter(server=svr).first()
                if not old_svr_info:
                    # Somehow we ended up with a Server w/o a LibcloudServerInfo, just move on
                    continue

                # Need to delete old one before can add new one
                location = old_svr_info.location
                tags = old_svr_info.tags
                snapshots = old_svr_info.snapshots.all()
                old_svr_info.delete()
                new_svr_info = OpenStackServerInfo.objects.create(server=svr, location=location, tags=tags)
                new_svr_info.snapshots.set(snapshots)


class Migration(migrations.Migration):

    dependencies = [
        ('openstack', '0014_openstackserverinfo'),
    ]

    operations = [
        migrations.RunPython(move_libcloudserverinfo_to_openstackserverinfo,
                             migrations.RunPython.noop),
    ]
