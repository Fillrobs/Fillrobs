# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2019-03-13 22:24
from __future__ import unicode_literals

from django.db import migrations


def assign_existing_vms_to_projects(apps, schema_editor):
    """
    Now that we have the GCPServerInfo model to track which GCPProject each GCE Server belongs to, we map any
    existing GCE VMs to the default RH Project that was created in migration 0012.
    """
    GCEHandler = apps.get_model('gce', 'GCEHandler')
    GCPServerInfo = apps.get_model('gce', 'GCPServerInfo')

    for handler in GCEHandler.objects.all():
        for server in handler.server_set.all():
            if not hasattr(server, 'libcloudhandlerinfo'):
                server_info, created = GCPServerInfo.objects.get_or_create(server=server)
                # there should only be one gcp project at this point
                # though even if they get assigned to the wrong project, the first Sync VMs job will correct it
                server_info.gcp_project = handler.gcp_projects.first()
                server_info.save()


class Migration(migrations.Migration):

    dependencies = [
        ('gce', '0013_gcpserverinfo'),
    ]

    operations = [
        migrations.RunPython(assign_existing_vms_to_projects, migrations.RunPython.noop),
    ]
