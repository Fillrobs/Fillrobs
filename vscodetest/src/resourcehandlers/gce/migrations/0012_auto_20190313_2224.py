# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2019-03-13 22:24
from __future__ import unicode_literals

import json

from django.db import migrations


def create_default_projects(apps, schema_editor):
    """
    With the newly introduced support for GCP Projects, we need to create the default GCPProject instance for any
    existing GCE Resource Handlers.

    Because the private key and client email are already stored on the handler, we can generate a partial service
    account key for this default project. (Even though there are other keys in a full service account key, these are the
    only two required fields to communicate with GCP)

    """
    GCEHandler = apps.get_model('gce', 'GCEHandler')
    GCPProject = apps.get_model('gce', 'GCPProject')

    for handler in GCEHandler.objects.all():
        # if the default project exists somehow, skip
        if not GCPProject.objects.filter(project_id=handler.project).exists():
            service_account_key = {
                "project_id": handler.project,
                "client_email": handler.serviceaccount,
                "private_key": handler.servicepasswd,
            }

            GCPProject.objects.create(
                name=handler.project,
                project_id=handler.project,
                service_account_key=json.dumps(service_account_key),
                handler=handler,
                imported=True,
            )


class Migration(migrations.Migration):

    dependencies = [
        ('gce', '0011_auto_20190308_1439'),
    ]

    operations = [
        migrations.RunPython(create_default_projects, migrations.RunPython.noop),
    ]
