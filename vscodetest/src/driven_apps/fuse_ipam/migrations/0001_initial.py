# Generated by Django 2.2.10 on 2020-08-18 22:55

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields.json
import driven_apps.common.custom_fields
import driven_apps.common.mixins
import driven_apps.common.validators
import driven_apps.fuse_ipam.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0052_auto_20200526_0144'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('naming', '0041_bluecatendpoint'),
    ]

    operations = [
        migrations.CreateModel(
            name='IpamPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', driven_apps.common.custom_fields.LowerCaseCharField(help_text='The type of this IPAM policy.', max_length=64, validators=[driven_apps.common.validators.RequiredFieldValidator(field_name='type')])),
                ('name', models.CharField(help_text='The user-specified name of this IPAM policy.', max_length=255, validators=[driven_apps.common.validators.RequiredFieldValidator(field_name='name'), driven_apps.common.validators.MinLengthValidator(constraint=3, field_name='name', required=True), driven_apps.common.validators.RegexValidator(field_name='name', message='Must be alphanumeric characters and/or underscores.', regex='^[0-9A-Za-z_]*$')])),
                ('description', models.TextField(blank=True, help_text='The description text for this IPAM policy.', null=True)),
                ('subnets', django_extensions.db.fields.json.JSONField(blank=True, default=None, help_text='Subnet entries for this IPAM policy.', null=True, validators=[driven_apps.fuse_ipam.validators.IpamPolicySubnetValidator(field_name='subnets')])),
                ('endpoint', models.ForeignKey(help_text='IPAM provider endpoint for this IPAM policy.', on_delete=django.db.models.deletion.PROTECT, to='naming.Endpoint')),
                ('real_type', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.ContentType')),
                ('workspace', models.ForeignKey(help_text='Workspace URL', on_delete=django.db.models.deletion.PROTECT, to='accounts.Group')),
            ],
            options={
                'verbose_name': 'IPAM policy',
                'verbose_name_plural': 'IPAM policies',
                'db_table': 'ipam_policy',
                'ordering': ['id'],
                'abstract': False,
            },
            bases=(models.Model, driven_apps.common.mixins.RoleBasedHalFilteringPolymorphicMixin),
        ),
        migrations.CreateModel(
            name='BlueCatIpamPolicy',
            fields=[
                ('ipampolicy_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='fuse_ipam.IpamPolicy')),
            ],
            options={
                'db_table': 'ipam_policy_bluecat',
                'ordering': ['id'],
                'abstract': False,
            },
            bases=('fuse_ipam.ipampolicy',),
        ),
        migrations.AddConstraint(
            model_name='ipampolicy',
            constraint=models.UniqueConstraint(fields=('type', 'name'), name='ipam_policy_type_name_unique'),
        ),
        migrations.AlterIndexTogether(
            name='ipampolicy',
            index_together={('type', 'name')},
        ),
    ]
