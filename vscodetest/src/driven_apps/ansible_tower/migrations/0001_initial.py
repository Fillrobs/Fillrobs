# Generated by Django 2.2.10 on 2020-10-22 17:35

import common.fields
from django.db import migrations, models
import django.db.models.deletion
import driven_apps.common.mixins
import driven_apps.common.validators
import driven_apps.policies.classes


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('naming', '0064_ansibletowerendpoint'),
        ('accounts', '0054_auto_20201019_1709'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnsibleTowerPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The user-specified name of this Ansible Tower policy.', max_length=255, unique=True, validators=[driven_apps.common.validators.NotBlankValidator(field_name='name', required=True), driven_apps.common.validators.MinLengthValidator(constraint=3, field_name='name', required=True), driven_apps.common.validators.RegexValidator(field_name='name', message='Must be alphanumeric characters and/or underscores.', regex='^[0-9A-Za-z_]*$')])),
                ('description', models.TextField(blank=True, help_text='The description text for this Ansible Tower policy.', null=True)),
                ('organization_name', common.fields.TemplatableField(help_text='Ansible Tower organization name.', max_length=65536, validators=[driven_apps.common.validators.StringFieldValidator(blank=False, field_name='organizationName', template=True)])),
                ('provisioning_job_templates', common.fields.TemplatableField(help_text='Ansible Tower provisioning job templates.', max_length=65536, validators=[driven_apps.common.validators.StringFieldValidator(blank=False, field_name='provisioningJobTemplates', template=True)])),
                ('endpoint', models.ForeignKey(help_text='Ansible Tower provider endpoint for this Ansible Tower policy.', on_delete=django.db.models.deletion.PROTECT, to='naming.AnsibleTowerEndpoint')),
                ('workspace', models.ForeignKey(help_text='Workspace URL', on_delete=django.db.models.deletion.PROTECT, to='accounts.Group')),
            ],
            options={
                'ordering': ['id'],
                'abstract': False,
            },
            bases=(driven_apps.policies.classes.GenericPolicy, models.Model, driven_apps.common.mixins.RoleBasedHalFilteringMixin),
        ),
    ]
