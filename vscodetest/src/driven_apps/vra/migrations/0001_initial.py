# Generated by Django 2.2.16 on 2021-01-07 21:49

import common.fields
from django.db import migrations, models
import django.db.models.deletion
import driven_apps.common.custom_fields
import driven_apps.common.mixins
import driven_apps.common.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0055_userprofile_widgets_json'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('naming', '0068_delete_namingjobparameters'),
    ]

    operations = [
        migrations.CreateModel(
            name='VraPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', driven_apps.common.custom_fields.LowerCaseCharField(help_text='The type of this vRealize Automation policy.', max_length=64, validators=[driven_apps.common.validators.RequiredFieldValidator(field_name='type')])),
                ('name', models.CharField(help_text='The user-specified name of this vRealize Automation policy.', max_length=255, validators=[driven_apps.common.validators.RequiredFieldValidator(field_name='name'), driven_apps.common.validators.MinLengthValidator(constraint=3, field_name='name', required=True), driven_apps.common.validators.RegexValidator(field_name='name', message='Must be alphanumeric characters and/or underscores.', regex='^[0-9A-Za-z_]*$')])),
                ('description', models.TextField(blank=True, help_text='The description text for this vRealize Automation policy.', null=True)),
                ('cloud_template_name', common.fields.TemplatableField(help_text='(Templatable) The Cloud Template Name for this vRealize Automation Policy (A.K.A) Blueprint Name', max_length=65536, validators=[driven_apps.common.validators.StringFieldValidator(blank=False, field_name='cloudTemplateName', template=True)])),
                ('cloud_template_version_number', common.fields.TemplatableField(help_text='(Templatable) The Cloud Template Version Number for this vRealize Automation Policy', max_length=65536, validators=[driven_apps.common.validators.StringFieldValidator(blank=False, field_name='cloudTemplateVersionNumber', template=True)])),
                ('cloud_template_inputs', common.fields.TemplatableField(blank=True, help_text='(Templatable) The Cloud Template Inputs for this vRealize Automation Policy', max_length=65536, null=True)),
                ('user_mappings', common.fields.TemplatableField(help_text='(Templatable) The User Mappings for this vRealize Automation Policy', max_length=65536, validators=[driven_apps.common.validators.StringFieldValidator(blank=False, field_name='userMappings', template=True)])),
                ('endpoint', models.ForeignKey(help_text='vRealize Automation provider endpoint for this vRealize Automation policy.', on_delete=django.db.models.deletion.PROTECT, to='naming.Endpoint')),
                ('real_type', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.ContentType')),
                ('workspace', models.ForeignKey(help_text='Workspace URL', on_delete=django.db.models.deletion.PROTECT, to='accounts.Group')),
            ],
            options={
                'verbose_name': 'vRealize Automation policy',
                'verbose_name_plural': 'vRealize Automation policies',
                'db_table': 'vra_policies',
                'ordering': ['id'],
                'abstract': False,
            },
            bases=(models.Model, driven_apps.common.mixins.RoleBasedHalFilteringPolymorphicMixin),
        ),
        migrations.CreateModel(
            name='Vra8Policy',
            fields=[
                ('vrapolicy_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='vra.VraPolicy')),
            ],
            options={
                'db_table': 'vra_policies_vra8',
                'ordering': ['id'],
                'abstract': False,
            },
            bases=('vra.vrapolicy',),
        ),
        migrations.AddConstraint(
            model_name='vrapolicy',
            constraint=models.UniqueConstraint(fields=('type', 'name'), name='vra_policies_type_name_unique'),
        ),
        migrations.AlterIndexTogether(
            name='vrapolicy',
            index_together={('type', 'name')},
        ),
    ]
