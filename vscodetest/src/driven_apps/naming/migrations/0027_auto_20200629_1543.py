# Generated by Django 2.2.12 on 2020-06-29 15:43

from django.db import migrations, models
import django.db.models.deletion
import driven_apps.common.custom_fields
import driven_apps.common.mixins
import driven_apps.common.validators


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0052_auto_20200526_0144'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('naming', '0026_auto_20200626_2110'),
    ]

    operations = [
        migrations.CreateModel(
            name='Endpoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', driven_apps.common.custom_fields.LowerCaseCharField(help_text='The type of this endpoint.', max_length=64, validators=[driven_apps.common.validators.RequiredFieldValidator(field_name='type'), driven_apps.common.validators.OneOfValidator(allowed_values=['dns', 'vra8'], field_name='type')])),
                ('name', models.CharField(help_text='The user-specified name of this endpoint.', max_length=255, validators=[driven_apps.common.validators.RequiredFieldValidator(field_name='name'), driven_apps.common.validators.MinLengthValidator(constraint=3, field_name='name', required=True), driven_apps.common.validators.RegexValidator(field_name='name', message='Must be alphanumeric characters and/or underscores.', regex='^[0-9A-Za-z_]*$')])),
                ('description', models.TextField(blank=True, default='', help_text='The description text for this endpoint.')),
                ('real_type', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.ContentType')),
                ('workspace', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.Group')),
            ],
            options={
                'verbose_name': 'endpoint',
                'verbose_name_plural': 'endpoints',
                'db_table': 'endpoints',
                'ordering': ['id'],
                'abstract': False,
            },
            bases=(models.Model, driven_apps.common.mixins.RoleBasedHalFilteringMixin),
        ),
        migrations.CreateModel(
            name='DnsEndpoint',
            fields=[
                ('endpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='naming.Endpoint')),
                ('host', models.CharField(help_text='The host name or IP address for this endpoint.', max_length=255, validators=[driven_apps.common.validators.RequiredFieldValidator(field_name='host'), driven_apps.common.validators.HostAddressValidator(field_name='host')])),
                ('port', models.IntegerField(help_text='The port number for this endpoint.', validators=[driven_apps.common.validators.RequiredFieldValidator(field_name='port'), driven_apps.common.validators.IntegerRangeValidator(1, 65535, field_name='port')])),
            ],
            options={
                'db_table': 'endpoints_dns',
                'ordering': ['id'],
                'abstract': False,
            },
            bases=('naming.endpoint', models.Model),
        ),
        migrations.CreateModel(
            name='Vra8Endpoint',
            fields=[
                ('endpoint_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='naming.Endpoint')),
                ('host', models.CharField(help_text='The host name or IP address for this endpoint.', max_length=255, validators=[driven_apps.common.validators.RequiredFieldValidator(field_name='host'), driven_apps.common.validators.HostAddressValidator(field_name='host')])),
                ('port', models.IntegerField(help_text='The port number for this endpoint.', validators=[driven_apps.common.validators.RequiredFieldValidator(field_name='port'), driven_apps.common.validators.IntegerRangeValidator(1, 65535, field_name='port')])),
                ('ssl', models.BooleanField(default=False, help_text='Flag to enable SSL for this endpoint.')),
                ('vra_version', models.CharField(help_text='The vRA version for this endpoint.', max_length=32, null=True)),
                ('vra_organization_name', models.CharField(help_text='The vRA organization name for this endpoint.', max_length=256, null=True)),
            ],
            options={
                'db_table': 'endpoints_vra8',
                'ordering': ['id'],
                'abstract': False,
            },
            bases=('naming.endpoint', models.Model),
        ),
        migrations.AddConstraint(
            model_name='endpoint',
            constraint=models.UniqueConstraint(fields=('type', 'name'), name='endpoints_type_name_unique'),
        ),
        migrations.AlterIndexTogether(
            name='endpoint',
            index_together={('type', 'name')},
        ),
    ]
