# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-06-19 21:53
from __future__ import unicode_literals
from builtins import range

from datetime import datetime
from django.db import migrations


def change_parameter_to_model(apps, schema_editor):
    """
    The end goal is to delete the no-longer-used power_off_hours parameter, as
    well as its CFVs (will happen because the FK cascades delete), if it exists.
    First we need to migrate any server power schedules currently defined using
    that CF/ CFVs to the new ScheduledTime modeling so the change in approach
    doesn't have a negative impact on customers
    """
    CustomField = apps.get_model('infrastructure', 'CustomField')
    ScheduledTime = apps.get_model('infrastructure', 'ScheduledTime')

    cf = CustomField.objects.filter(name='power_off_hours').first()
    if cf:
        # If it's for some reason used somewhere other than a server, we're not
        # concerned with that
        cfvs = cf.customfieldvalue_set.exclude(server=None)
        for cfv in cfvs:
            # The value is of the format 10pm-6am, which means power off at 10pm
            # and on at 6am
            off_time, on_time = cfv.str_value.split('-')
            # Being cautious in case people have weird values
            try:
                off_hour = datetime.strptime(off_time, '%I%p').hour
            except ValueError:
                off_hour = None
            try:
                on_hour = datetime.strptime(on_time, '%I%p').hour
            except ValueError:
                on_hour = None

            # The basic approach would apply every day
            servers = cfv.server_set.all()
            for day in range(7):
                # If for some reason a time didn't parse correctly,
                # don't try to do anything with it
                if off_hour:
                    off_st, _ = ScheduledTime.objects.get_or_create(
                        hour=off_hour, day_of_week=day)
                    off_st.servers_to_power_off.add(*servers)
                if on_hour:
                    on_st, _ = ScheduledTime.objects.get_or_create(
                        hour=on_hour, day_of_week=day)
                    on_st.servers_to_power_on.add(*servers)

        cf.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('infrastructure', '0018_auto_20170617_0025'),
    ]

    operations = [
        migrations.RunPython(change_parameter_to_model),
    ]
