# Generated by Django 3.2.5 on 2021-12-13 18:35

from django.db import migrations


def update_internet_max_bandwidth_out(apps, schema_editor):
    """
    Since originally adding the internet_max_bandwidth_out Parameter for Alibaba we've realized
    it would be better for it to be required and an integer. We changed alibaba_minimal so it will
    be created that way when new, but for instances where it already exists we must use this to
    change those attributes. With the change of type, we also update any CFVs accordingly
    """
    CustomField = apps.get_model('infrastructure', 'CustomField')
    CustomFieldValue = apps.get_model('orders', 'CustomFieldValue')

    try:
        cf = CustomField.objects.get(name="internet_max_bandwidth_out")
    except CustomField.DoesNotExist:
        return

    cf.required = True
    cf.type = "INT"
    for cfv in CustomFieldValue.objects.filter(field=cf):
        try:
            # If it isn't an int our best bet is probably just to set it to 0. Alibaba doesn't seem
            # to accept anything other than integers anyways, leaving it as None can cause issues
            # (e.g., trying to compare it to the ints in the options for an Env), and just deleting it
            # feels risky as well. It won't end up being a valid option since the minimum is 1, which
            # seems alright and makes it more like the safe equivalent of None/removal
            cfv.int_value = int(cfv.str_value)
        except (ValueError, TypeError):
            cfv.int_value = 0
        finally:
            cfv.str_value = None
            cfv.save()
    cf.save()


def update_internet_max_bandwidth_out_reverse(apps, schema_editor):
    """
    To allow truly undoing this migration, turn the CF back into a non-required string
    """
    CustomField = apps.get_model('infrastructure', 'CustomField')
    CustomFieldValue = apps.get_model('orders', 'CustomFieldValue')

    try:
        cf = CustomField.objects.get(name="internet_max_bandwidth_out")
    except CustomField.DoesNotExist:
        return

    cf.required = False
    cf.type = "STR"
    for cfv in CustomFieldValue.objects.filter(field=cf):
        cfv.str_value = str(cfv.int_value)
        cfv.int_value = None
        cfv.save()
    cf.save()


class Migration(migrations.Migration):

    dependencies = [
        ('infrastructure', '0061_merge_20210823_0019'),
        ('orders', '0041_alter_customfieldvalue_url_value'),
    ]

    operations = [
        migrations.RunPython(update_internet_max_bandwidth_out, update_internet_max_bandwidth_out_reverse),
    ]
