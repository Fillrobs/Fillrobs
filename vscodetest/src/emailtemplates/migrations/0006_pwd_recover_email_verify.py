# Generated by Django 2.2.10 on 2020-04-24 14:42

from django.db import migrations


base_templates = {
    "password-recovery": {
        "name": "Password Recovery",
        "subject": "Password recovery on {{ current_portal.name }}",
        "body": """
            Dear {{ user.username }},

            A password reset on {{ current_portal.name }} has been requested for this account. If you believe this was done in error, contact your administrator.

            Set your new password by following this link: {{ current_portal.site_url|slice:":-1" }}{% url "password_reset_confirm" uid token %}

            If you don't want to reset your password, you may ignore this email and it will stay unchanged.
            """,
    },
    "email-change-confirmation": {
        "name": "Email Change Confirmation",
        "subject": "Verify email change on {{ current_portal.name }}",
        "body": """
            Dear {{ user.username }},

            Please confirm that you wish to set the email address for your account on {{ current_portal.name }} to {{ email_address }}. If you believe you have received this email in error, contact your administrator.

            Confirm this change by following this link: {{ current_portal.site_url|slice:":-1" }}{% url "verify_email" uid token %}

            If you don't want to change your email address, you may ignore this email and it will stay unchanged.
        """,
    },
}


def create_templates(apps, schema_editor):
    """
    For each of the template defined above, create or update on the slug
    and update the remaining fields. This will also default to not renamable,
    making the templates loaded through this migration un-deletable via the UI.
    We use this rather than cb_minimal to create OOTB email templates.
    """
    EmailTemplate = apps.get_model("emailtemplates", "EmailTemplate")
    for slug, defaults in base_templates.items():
        EmailTemplate.objects.update_or_create(
            is_renamable=False, slug=slug, defaults=defaults
        )


class Migration(migrations.Migration):

    dependencies = [
        ("emailtemplates", "0005_auto_20191017_0101"),
    ]

    operations = [
        migrations.RunPython(create_templates, migrations.RunPython.noop),
    ]
