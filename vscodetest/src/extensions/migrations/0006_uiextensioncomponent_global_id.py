# Generated by Django 3.2.3 on 2021-06-24 21:25
import common
from django.db import migrations, models
from common.mixins import get_global_id_chars


def set_global_ids(apps, _):
    """
    Set random values with appropriate prefixes for the global_id field on
    all existing model entities. The initial schema migration to add the field to the
    model by way of the GlobalIDForAPIMixin will leave all rows
    with the same 8 random characters (and no prefix yet) because the function
    is only called once to calculate the default value for the entire new column
    (https://stackoverflow.com/a/42497696).
    Therefore, we regenerate the 8 random characters to make them different
    across all rows and then add the prefix, like would be done by
    the custom save method for normal object creation.
    """
    uix_component_model = apps.get_model('extensions', 'UIExtensionComponent')
    prefix = 'XUIC'
    for row in uix_component_model.objects.all():
        chars = get_global_id_chars()
        row.global_id = f'{prefix}-{chars}'
        row.save()


class Migration(migrations.Migration):
    dependencies = [
        ('extensions', '0005_set_global_id_for_ui_extensions'),
    ]

    operations = [
        migrations.AddField(
            model_name='uiextensioncomponent',
            name='global_id',
            field=models.CharField(default=common.mixins.get_global_id_chars,
                                   help_text='Identifier that can be used to access this object through the API across instances.',
                                   max_length=16, verbose_name='Global ID'),
        ),
        migrations.RunPython(set_global_ids, migrations.RunPython.noop)
    ]
