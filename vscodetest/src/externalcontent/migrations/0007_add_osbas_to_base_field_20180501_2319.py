# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-05-01 23:19
from __future__ import unicode_literals

from django.db import migrations

from utilities.logger import ThreadLogger


logger = ThreadLogger(__name__)


def add_osba_relationships(apps, schema_editor):
    """
    :param apps:
    :param schema_editor:
    :return:
    """
    ResourceHandler = apps.get_model('resourcehandlers', 'ResourceHandler')
    OSBuildAttribute = apps.get_model('externalcontent', 'OSBuildAttribute')

    for handler in ResourceHandler.objects.exclude(resource_technology__name='IPMI'):
        osba_count = 0
        try:
            # get the submodel instance
            SubModel = apps.get_model(handler.real_type.app_label, handler.real_type.model)
            real_handler = SubModel.objects.get(id=handler.id)

            if not hasattr(real_handler, 'os_build_attributes'):
                logger.info("{} handler has no attribute 'os_build_attributes'.".format(real_handler))

            # copy the os_build_attributes from this handler to the base level relationship between OSBA and RH.
            for osba in real_handler.os_build_attributes.all():
                osba = osba.osbuildattribute_ptr
                handler.osbuildattribute_set.add(osba)
                osba.save()
                osba_count += 1
            logger.info("{} OS Build Attributes copied from {} to the base model relationship on ResourceHandler.".format(
                osba_count, real_handler))
            handler.save()
        except AttributeError as e:
            # if the handler had no submodel, then the getattr will fail (it will try to getattr on resourcehandler)
            # this could be a number of other errors, so stick with a generic log message.
            logger.info("OSBAS were not copied from handler {}.".format(handler))
            logger.debug(e)


class Migration(migrations.Migration):

    dependencies = [
        ('externalcontent', '0006_osbuildattribute_resourcehandler'),
    ]

    operations = [
        migrations.RunPython(add_osba_relationships, migrations.RunPython.noop)
    ]
