# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-05-03 16:58
from __future__ import unicode_literals

from django.db import migrations

from utilities.logger import ThreadLogger


logger = ThreadLogger(__name__)


def copy_template_name(apps, shema_editor):
    """

    :param apps:
    :param shema_editor:
    :return:
    """
    OSBuildAttribute = apps.get_model('externalcontent', 'OSBuildAttribute')
    for osba in OSBuildAttribute.objects.all():
        # get the submodel
        try:
            real_osba = getattr(osba, osba.real_type.model)
        except AttributeError:
            # if an OSBA does not have a real_type, there won't be anything to copy.
            logger.info("Could not get a submodel for OSBuildAttribute instance: {}".format(osba))
            continue

        # copy the name to the new attribute on the base model.
        try:
            osba._name = real_osba.template_name
        except AttributeError:
            # AWS does not have 'template_name', get the 'name' field instead.
            try:
                osba._name = real_osba.name
            except AttributeError:
                # If no 'name' field, skip them.  ( originally for HPSA, now retired. )
                continue
        osba.save()


class Migration(migrations.Migration):

    dependencies = [
        ('externalcontent', '0009_osbuildattribute__name'),
    ]

    operations = [
        migrations.RunPython(
            copy_template_name,
            migrations.RunPython.noop
        )
    ]
