# Generated by Django 2.2.10 on 2020-04-14 19:29

import cb_secrets.fields
import common.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('dataprotection', '0001_initial'), ('dataprotection', '0002_auto_20200310_2317'), ('dataprotection', '0003_auto_20200313_2236'), ('dataprotection', '0004_auto_20200407_2137'), ('dataprotection', '0005_auto_20200407_2246'), ('dataprotection', '0006_auto_20200407_2255'), ('dataprotection', '0007_auto_20200407_2340'), ('dataprotection', '0008_auto_20200408_2101')]

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataProtectionTechnology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name of the data protection technology (ex. Cohesity)')),
                ('version', models.CharField(max_length=20, verbose_name='Version of the resource technology')),
                ('modulename', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='DataProtection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('real_type', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.ContentType')),
                ('dataprotection_technology', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='dataprotection.DataProtectionTechnology')),
                ('ip', models.CharField(default=None, max_length=50, verbose_name='IP address')),
                ('port', models.IntegerField(default=443, help_text='Port used to connect to this ip manager', validators=[common.validators.is_only_digits])),
                ('protocol', models.CharField(choices=[('http', 'http'), ('https', 'https')], default='https', help_text='Protocol used to connect to this ip manager', max_length=10)),
                ('serviceaccount', models.CharField(default=None, help_text='Username of account authorized to run commands on this ip manager', max_length=250, verbose_name='Account username')),
                ('servicepasswd', cb_secrets.fields.EncryptedPasswordField(default=None, verbose_name='Account password')),
            ],
            options={
                'ordering': ['name'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProtectionPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Protection plan name')),
                ('system_id', models.CharField(max_length=100, verbose_name='Plan id in data protection solution')),
                ('dataprotection', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='dataprotection.DataProtection')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
