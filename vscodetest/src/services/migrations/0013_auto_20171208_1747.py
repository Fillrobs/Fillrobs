# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-12-08 17:47
from __future__ import unicode_literals

from django.db import migrations


class RenameModelWorkaround(migrations.RenameModel):
    """
    Workaround for Django bug #29000. AlterField and RenameField trigger a
    partial model reload which can cause the migration state to drop some
    relationships between models. If those relationships don't exist, then
    certain column renames can get skipped during a RenameModel migration.
    To make sure the relationships exist, do a full reload of the model
    at the start of the migration.
    """
    def database_forwards(self, app_label, schema_editor, from_state, to_state):
        from_state.reload_model(app_label, self.old_name_lower)
        super(RenameModelWorkaround, self).database_forwards(
            app_label, schema_editor, from_state, to_state)


class Migration(migrations.Migration):

    # Must run before any migrations that create a FK to services.Service
    dependencies = [
        ('services', '0012_auto_20171127_1955'),
        ('containerorchestrators', '0002_containerresource'),
        ('history', '0002_auto_20160829_2059'),
        ('infrastructure', '0012_resourcepoolvalueset_service'),
        ('jobs', '0007_auto_20161004_2121'),
        ('networks', '0003_auto_20160829_2059'),
        ('orders', '0007_installserviceorderitem_parent_service'),
    ]

    operations = [
        RenameModelWorkaround(
            old_name='Service',
            new_name='Resource',
        ),
    ]
