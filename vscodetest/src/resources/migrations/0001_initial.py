# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-02-01 18:44
from __future__ import unicode_literals

import common.classes
import common.mixins
import common.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0026_auto_20180115_1337'),
        ('orders', '0020_merge_20180131_1251'),
        ('jobs', '0020_merge_20180125_1830'),
        ('resourcehandlers', '0009_auto_20171212_1729'),
        ('servicecatalog', '0028_change_bp_image_paths_20180118_1917'),
        ('infrastructure', '0029_merge_20180129_1956'),
    ]

    operations = [
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('lifecycle', models.CharField(choices=[('ACTIVE', 'Active'), ('HISTORICAL', 'Historical'), ('PROV', 'Provisioning'), ('PROVFAILED', 'Provision Failed')], default='PROV', max_length=10, verbose_name='Lifecycle')),
                ('attributes', models.ManyToManyField(blank=True, to='orders.CustomFieldValue')),
                ('blueprint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servicecatalog.ServiceBlueprint')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.Group', verbose_name='Group')),
                ('jobs', models.ManyToManyField(blank=True, to='jobs.Job')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.UserProfile', verbose_name='Owner')),
                ('parent_resource', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sub_components', to='resources.Resource')),
            ],
            bases=(models.Model, common.classes.AutoCompleteMixin, common.mixins.HasCustomFieldValuesMixin),
        ),
        migrations.CreateModel(
            name='ResourceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Alphanumeric characters, starting with a letter, with optional underscores.', max_length=50, unique=True, validators=[common.validators.valid_python_identifier])),
                ('label', models.CharField(max_length=255)),
                ('plural_label', models.CharField(blank=True, help_text='Optional label for plural references to this Resource Type. If not set, defaults to adding an "s" to the label.', max_length=255, null=True)),
                ('lifecycle', models.CharField(choices=[('ACTIVE', 'Active'), ('HISTORICAL', 'Historical')], default='ACTIVE', max_length=10)),
            ],
            options={
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='SoftwareDefinedNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('identifier', models.CharField(help_text='Identifier to tell external API what unique id to look for', max_length=255)),
                ('appliance_identifier', models.CharField(help_text='Indentifier to tell external API what unique appliance id to look for. Appliances can be used to configure routing, firewall, load balancers and other services', max_length=255, null=True)),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructure.Environment')),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resourcehandlers.ResourceNetwork')),
                ('resource', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='resources.Resource')),
                ('resource_handler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resourcehandlers.ResourceHandler')),
                ('service_item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='servicecatalog.ServiceItem')),
            ],
        ),
        migrations.CreateModel(
            name='SoftwareDefinedNetworkAppliance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('identifier', models.CharField(help_text='Identifier to tell external API what unique id to look for', max_length=255)),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructure.Environment')),
                ('resource', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='resources.Resource')),
                ('resource_handler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resourcehandlers.ResourceHandler')),
            ],
        ),
        migrations.AddField(
            model_name='resource',
            name='resource_type',
            field=models.ForeignKey(help_text='The type of resource that this object represents.', on_delete=django.db.models.deletion.PROTECT, to='resources.ResourceType', verbose_name='Resource Type'),
        ),
    ]
