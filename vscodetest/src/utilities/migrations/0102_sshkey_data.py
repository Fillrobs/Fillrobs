# Generated by Django 2.2.16 on 2021-03-16 22:32

from django.db import migrations

from common.mixins import get_global_id_chars

GLOBAL_ID_PREFIX = "SSH"

def string_to_id(id_str):
    try:
        return int(id_str)
    except ValueError:
        return -1


def get_resource_handler_and_name(ResourceHandler, name_string):
    key_name = None
    resource_handler = None
    (id_part, _, name_part) = name_string.partition(":")
    resource_handler_id = string_to_id(id_part)
    if resource_handler_id >= 0 and name_part and name_part.strip():
        if resource_handler_id > 0:
            queryset = ResourceHandler.objects.filter(pk=resource_handler_id)
            if queryset.exists():
                resource_handler = queryset.first()
                key_name = name_part
        else:
            key_name = name_part
            resource_handler = None
    return key_name, resource_handler


def forward_func(apps, _):
    CustomFieldValue = apps.get_model('orders', 'CustomFieldValue')
    StoredSSHKey = apps.get_model('utilities', 'StoredSSHKey')
    ResourceHandler = apps.get_model('resourcehandlers', 'ResourceHandler')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    ctype = ContentType.objects.get_for_model(StoredSSHKey)
    for key_material in CustomFieldValue.objects.filter(field__name='key_material'):
        (key_name, resource_handler) = get_resource_handler_and_name(ResourceHandler, key_material.str_value)
        if key_name:
            queryset = StoredSSHKey.objects.filter(
                name=key_name, resource_handler=resource_handler
            )
            if not queryset.exists():
                # For some reason, without the two lines below,
                # the "SSH-" prefix does not get added to global_id.
                global_id_chars = get_global_id_chars()
                global_id = f"{GLOBAL_ID_PREFIX}-{global_id_chars}"
                # Also note we have to explicitly set real_type, since
                # in migration context, HasSubModelsMixin polymorphic
                # types need this little bit of "help" to properly
                # link the base class to subclass types/tables.
                StoredSSHKey.objects.create(
                    global_id=global_id,
                    name = key_name,
                    real_type = ctype,
                    resource_handler = resource_handler,
                    private_key = key_material.pwd_value,
                )


def reverse_func(apps, _):
    StoredSSHKey = apps.get_model('utilities', 'StoredSSHKey')
    StoredSSHKey.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('utilities', '0101_sshkey_storedsshkey'),
    ]

    operations = [
        migrations.RunPython(forward_func, reverse_func),
    ]
