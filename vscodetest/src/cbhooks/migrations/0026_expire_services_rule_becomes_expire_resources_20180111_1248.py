# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2018-01-11 12:48
from __future__ import unicode_literals

from django.db import migrations


def rename_rule_and_actions(apps, schema_editor):
    """
    Renaming the "Expire Services" rule to generic "Expire Resources" and
    updating some of its attributes as well as its condition and then action.
    Rather than relying completely on create_objects/ cb_minimal, which would
    create a brand new rule and actions for existing customers, change the names
    of the four objects here first. Then, when the new cb_minimal is used it'll
    correctly find the old rule and actions with the new names and update their
    remaining attributes that have been changed (e.g., labels, descriptions,
    modules as appropriate).
    """
    TriggerPoint = apps.get_model("cbhooks", "TriggerPoint")

    rule = TriggerPoint.objects.filter(name='expire_services').first()
    if rule:
        rule.name = 'expire_resources'
        rule.save()
        condition = rule.condition
        if condition:
            condition.name = 'Find Expired Resources'
            condition.save()
        # The "then" action actually consists of 2 layers: a HookPointAction and
        # its OrchestrationHook, both with the same name
        then_action_hpa = rule.hookpointaction_set.first()
        if then_action_hpa:
            then_action_hpa.name = 'Send Email About or Delete Expired Resources'
            then_action_hpa.save()
            then_action = then_action_hpa.hook
            if then_action:
                then_action.name = 'Send Email About or Delete Expired Resources'
                then_action.save()


class Migration(migrations.Migration):

    dependencies = [
        ('cbhooks', '0025_delete_service_trigger_points_become_delete_resource_20180110_1935'),
    ]

    operations = [
        migrations.RunPython(rename_rule_and_actions,
                             migrations.RunPython.noop),
    ]
