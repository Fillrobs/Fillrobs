# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-12-21 18:49
from __future__ import unicode_literals

from django.db import migrations


def permissions_service_to_resource(apps, schema_editor):
    """
    Change the permissions that used to have the 'service.' pattern/ namespace
    to instead use 'resource.'. Attributes set to match what's in cb_minimal on
    this date.
    """
    CBPermission = apps.get_model('accounts', 'CBPermission')

    view_perm = CBPermission.objects.filter(name='service.view').first()
    if view_perm:
        view_perm.name = 'resource.view'
        view_perm.label = 'View Resource'
        # Description in cb_minimal is '' so don't need to set
        view_perm.save()

    attr_perm = CBPermission.objects.filter(name='service.change_attributes').first()
    if attr_perm:
        attr_perm.name = 'resource.change_attributes'
        attr_perm.label = 'Change Resource Attributes'
        # Description in cb_minimal is '' so don't need to set
        attr_perm.save()

    param_perm = CBPermission.objects.filter(name='service.manage_parameters').first()
    if param_perm:
        param_perm.name = 'resource.manage_parameters'
        param_perm.label = 'Manage Resource Parameters'
        param_perm.description = 'Add, remove, and modify parameters (AKA custom fields) on resources'
        param_perm.save()

    action_perm = CBPermission.objects.filter(name='service.all_actions').first()
    if action_perm:
        action_perm.name = 'resource.all_actions'
        action_perm.label = 'Run All Resource Actions'
        action_perm.description = 'Allows the user to execute any Resource Action available on the resource'
        action_perm.save()


def service_owner_to_resource_owner(apps, schema_editor):
    """
    Change the role that was previously called 'service_owner' to instead be
    'resource_owner'. Attributes set to match what's in cb_minimal on this date.
    No need to actually set permissions because they will maintain their M2M
    relationship, including to the ones edited above.
    """
    Role = apps.get_model('accounts', 'Role')

    owner_role = Role.objects.filter(name='service_owner').first()
    if owner_role:
        owner_role.name = 'resource_owner'
        owner_role.label = 'Resource Owner'
        owner_role.description = 'Permissions that are granted to owners of resources'
        owner_role.save()


def change_service_to_resource(apps, schema_editor):
    """
    Update both the permissions and the role to change service to resource,
    using the 2 submethods
    """
    permissions_service_to_resource(apps, schema_editor)
    service_owner_to_resource_owner(apps, schema_editor)


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0022_auto_20171221_1848'),
    ]

    operations = [
        migrations.RunPython(change_service_to_resource),
    ]
