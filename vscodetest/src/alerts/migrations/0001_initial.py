# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-08-07 18:01
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Label for this Alert Channel', max_length=80)),
                ('_alert_categories', models.CharField(blank=True, default='', help_text='Comma-separated list of alert categories that should be sent to this channel.', max_length=512)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SlackAlertChannel',
            fields=[
                ('alertchannel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='alerts.AlertChannel')),
                ('_slack_channels', models.CharField(default='', help_text='Comma-separated list of the Slack Channel(s) you wish to send to, by name or ID', max_length=512, verbose_name='Slack Channel(s)')),
                ('slack_api_token', models.CharField(default='', help_text="The API Token that can be used to connect to the Slack API, which is tied to a Slack app in your workspace. For more information, see the <a href='https://api.slack.com/slack-apps#creating_apps'>Slack documentation</a>.", max_length=512, verbose_name='Slack API Token')),
            ],
            options={
                'abstract': False,
            },
            bases=('alerts.alertchannel',),
        ),
        migrations.AddField(
            model_name='alertchannel',
            name='real_type',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
    ]
